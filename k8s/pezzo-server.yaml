apiVersion: apps/v1
kind: Deployment
metadata:
  name: pezzo-server
  namespace: pezzo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pezzo-server
  template:
    metadata:
      labels:
        app: pezzo-server
    spec:
      imagePullSecrets:
        - name: acr
      containers:
      - name: pezzo-server
        # image: ghcr.io/pezzolabs/pezzo/server:latest
        image: sentencelabs.azurecr.io/pezzo-server:latest
        imagePullPolicy: Always
        # Alternatively, you can use the build context from the original docker-compose
        # You would need to build and push this image to a registry first
        ports:
        - containerPort: 3000
        env:
        - name: SUPERTOKENS_CONNECTION_URI
          valueFrom:
            configMapKeyRef:
              name: pezzo-config
              key: SUPERTOKENS_CONNECTION_URI
        - name: CLICKHOUSE_HOST
          value: "clickhouse"
        - name: CLICKHOUSE_PORT
          value: "8123"
        - name: CLICKHOUSE_USER
          value: "default"
        - name: CLICKHOUSE_PASSWORD
          value: "default"
        - name: CONSOLE_HOST
          valueFrom:
            configMapKeyRef:
              name: pezzo-config
              key: CONSOLE_HOST
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: pezzo-secret
              key: SENDGRID_API_KEY
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: pezzo-config
              key: REDIS_URL
        - name: KMS_LOCAL_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: pezzo-config
              key: KMS_LOCAL_ENDPOINT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: pezzo-config
              key: DATABASE_URL
        - name: KAFKA_BROKERS
          value: "kafka:9092"
        - name: SENDGRID_FROM_EMAIL
          value: "hello@sentencelabs.ai"
        - name: SENDGRID_TEMPLATE_ID
          value: "d-93573dce290d40deb57c4a49ed0d4c49"
        - name: KAFKA_CLIENT_ID
          value: "pezzo-server"
        - name: KAFKA_GROUP_ID
          value: "pezzo-server-group"
        readinessProbe:
          httpGet:
            path: /api/healthz
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: pezzo-server
  namespace: pezzo
spec:
  selector:
    app: pezzo-server
  ports:
  - port: 3000
    targetPort: 3000 